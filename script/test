#!/usr/bin/env python

# By Jeff Winkler, http://jeffwinkler.net
# http://jeffwinkler.net/2006/04/27/keeping-your-nose-green/
#
# Modified a little by Mac
# It'll loop forever and run tests whenever any code changes.

import glob,os,stat,time,sys,re
import optparse

option_parser = optparse.OptionParser('common/script/test')
option_parser.add_option('-g', '--growl',
                         action='store_true', dest='growl', default=False,
                         help='Growl results')
(options, args) = option_parser.parse_args()

code_dirs = args

def checkSumRecurse(path='.', file_suffix='py'):
    """ Recurse through subdirectories
    By Kevin Dahlhausen
    """
    val = 0
    file_regex = r'^[^.].*\.%s$' % file_suffix
    for dirpath, dirs, files in os.walk(path):
        for file in [file for file in files if re.match(file_regex,file)]:
            absoluteFileName = os.path.join(dirpath, file)
            stats = os.stat(absoluteFileName)
            val += stats[stat.ST_SIZE] + stats[stat.ST_MTIME]
    return val



print 'Tests yo!'
vals = [0 for code_dir in code_dirs]
while (True):
    for i, code_dir in enumerate(code_dirs):
        if checkSumRecurse(code_dir) != vals[i]:
            vals[i]=checkSumRecurse(code_dir)
            return_value = os.system('django-admin.py test && django-admin.py harvest --settings=settings.test')
            if options.growl:
                if return_value == 0:
                    message = 'passed'
                else:
                    message = 'failed'
                os.system('growlnotify -n"nosetests" -m"Tests {0}"'.format(message))
    time.sleep(1)
